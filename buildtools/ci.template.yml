Parameters:
  GitHubOrg:
    Type: String
    Default: "aws"
    Description: The GitHub organization to use for the repository.
  GitHubRepositoryName:
    Description: The name of the GitHub repository to create the role template in and to use for the CodeBuild.
    Type: String
    Default: "aws-tools-for-powershell"
  OIDCProviderArn:
    Description: Arn for the GitHub OIDC Provider.
    Default: ""
    Type: String
  CodeBuildProjectName:
    Description: Name of the CodeBuild project.
    Default: "aws-tools-for-powershell-ci"
    Type: String
  ECRRepositoryName:
    Description: Name of the ECR repository used for the CodeBuild.
    Default: "aws-tools-for-powershell-ci"
    Type: String
  TestRunnerRoleArn:
    Description: Role to run tests with.
    Default: ""
    Type: String

Conditions:
  CreateOIDCProvider: !Equals
    - !Ref OIDCProviderArn
    - ""

Resources:
  OidcRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !If
                - CreateOIDCProvider
                - !Ref GithubOidc
                - !Ref OIDCProviderArn
            Condition:
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub repo:${GitHubOrg}/${GitHubRepositoryName}:*
      Policies:
        - PolicyName: !Sub "${AWS::StackName}-OIDC-Policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource:
                  - !Sub arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${CodeBuildProjectName}
              - Effect: Allow
                Action:
                  - logs:GetLogEvents
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${CodeBuildProjectName}:*
  GithubOidc:
    Type: AWS::IAM::OIDCProvider
    Condition: CreateOIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - a031c46782e6e6c662c2c87c76da9aa62ccabd8e

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${CodeBuildProjectName}
      ServiceRole: !GetAtt CodeBuildProjectRole.Arn
      Environment:
        ComputeType: BUILD_GENERAL1_LARGE
        Type: WINDOWS_SERVER_2019_CONTAINER
        ImagePullCredentialsType: SERVICE_ROLE
        Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECRRepositoryName}:latest"
        EnvironmentVariables:
        - Name: TEST_RUNNER_ROLE_ARN
          Type: PLAINTEXT
          Value: !Ref TestRunnerRoleArn
      Source:
        Type: GITHUB
        Location: !Sub https://github.com/${GitHubOrg}/${GitHubRepositoryName}
        BuildSpec: buildtools/ci.buildspec.yml
      Artifacts:
        Type: NO_ARTIFACTS

  CodeBuildProjectRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codebuild.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: !Sub "${AWS::StackName}-CodeBuild"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 'logs:CreateLogGroup'
                - 'logs:PutLogEvents'
                - 'logs:CreateLogStream'
                Effect: Allow
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${CodeBuildProjectName}"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${CodeBuildProjectName}:*"
              - Action:
                - 'ecr:BatchCheckLayerAvailability'
                - 'ecr:BatchGetImage'
                - 'ecr:GetDownloadUrlForLayer'
                - 'ecr:GetAuthorizationToken'
                Effect: Allow
                Resource:
                # For some reason, specific repository permission doesn't work
                  - "*"
              - Action:
                - 'sts:AssumeRole'
                Effect: Allow
                Resource:
                  - !Ref TestRunnerRoleArn

Outputs:
  OidcRole:
    Value: !GetAtt OidcRole.Arn